this["monetization_iso"] =
(window["webpackJsonp_name_iso"] = window["webpackJsonp_name_iso"] || []).push([[244],{

/***/ 120:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _unsupportedIterableToArray; });
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(83);

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return Object(_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);
}

/***/ }),

/***/ 165:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ toPropertyKey; });

// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__(39);

// CONCATENATED MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/toPrimitive.js

function toPrimitive(t, r) {
  if ("object" != Object(esm_typeof["a" /* default */])(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != Object(esm_typeof["a" /* default */])(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
// CONCATENATED MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js


function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == Object(esm_typeof["a" /* default */])(i) ? i : i + "";
}

/***/ }),

/***/ 198:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _arrayWithHoles; });
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/***/ }),

/***/ 199:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _nonIterableRest; });
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ 231:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "c", function() { return /* binding */ refreshAdsIds; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ refreshAds; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* binding */ setTargetingPubads; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* binding */ setAds; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ dfp_display; });

// UNUSED EXPORTS: nonAsyncSetAds

// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(26);

// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/.pnpm/canopy-common-fo@12.40.0_@babel+core@7.24.4_@date-io+core@1.3.13_@types+react@18.2.75_enzyme@_whoumozrlvqevdl3s2ltxkc264/node_modules/canopy-common-fo/src/shared/random.js
function getRandomString() {
  // eslint-disable-next-line no-bitwise
  return (0 | Math.random() * 9e6).toString(36);
}
function getRandomNumber() {
  return Math.floor(Math.random() * 9e10);
}
// CONCATENATED MODULE: ./node_modules/.pnpm/canopy-common-fo@12.40.0_@babel+core@7.24.4_@date-io+core@1.3.13_@types+react@18.2.75_enzyme@_whoumozrlvqevdl3s2ltxkc264/node_modules/canopy-common-fo/src/externals/monetization/viewportHelper.js
var shouldDisplayViewport = function shouldDisplayViewport(width, height) {
  var viewportConditions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var viewportConditionsSort = viewportConditions.sort(function (a, b) {
    if (a[0][0] < b[0][0]) {
      return 1;
    }
    if (a[0][0] === b[0][0]) {
      return a[0][1] - b[0][1];
    }
    if (a[0][0] > b[0][0]) {
      return -1;
    }
    return 0;
  });
  var matchingViewport = viewportConditionsSort.find(function (viewport) {
    if (viewport[0][0] <= width) {
      if (viewport[0][1] <= height) {
        return true;
      }
    }
    return false;
  });
  if (matchingViewport) {
    return matchingViewport[1];
  }
  return false;
};
// CONCATENATED MODULE: ./node_modules/.pnpm/canopy-common-fo@12.40.0_@babel+core@7.24.4_@date-io+core@1.3.13_@types+react@18.2.75_enzyme@_whoumozrlvqevdl3s2ltxkc264/node_modules/canopy-common-fo/src/externals/monetization/criteo.js
// https://publisherdocs.criteotilt.com/cdb/#cdb-script



// provide Criteo async loading api bootstrap
if (typeof window !== 'undefined') {
  window.Criteo = window.Criteo || {};
  window.Criteo.events = window.Criteo.events || [];
}
function displayCriteZoneId(criteoZoneId) {
  var containerPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  window.Criteo.events.push(function () {
    window.Criteo.DisplayAcceptableAdIfAdblocked({
      zoneId: criteoZoneId,
      containerid: "".concat(containerPrefix, "crt-").concat(criteoZoneId),
      overrideZoneFloor: false
    });
  });
}
function display(_ref) {
  var criteoZoneId = _ref.criteoZoneId,
    criteoViewports = _ref.criteoViewports,
    elementId = _ref.elementId;
  if (criteoViewports) {
    var viewPortWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    var viewPortHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    var criteoZoneIdForViewPort = shouldDisplayViewport(viewPortWidth, viewPortHeight, criteoViewports);
    if (criteoZoneIdForViewPort !== false) {
      displayCriteZoneId(criteoZoneIdForViewPort, elementId);
    }
  } else {
    displayCriteZoneId(criteoZoneId);
  }
}
// EXTERNAL MODULE: ./node_modules/.pnpm/canopy-common-fo@12.40.0_@babel+core@7.24.4_@date-io+core@1.3.13_@types+react@18.2.75_enzyme@_whoumozrlvqevdl3s2ltxkc264/node_modules/canopy-common-fo/src/externals/monetization/index.js
var monetization = __webpack_require__(457);

// CONCATENATED MODULE: ./node_modules/.pnpm/canopy-common-fo@12.40.0_@babel+core@7.24.4_@date-io+core@1.3.13_@types+react@18.2.75_enzyme@_whoumozrlvqevdl3s2ltxkc264/node_modules/canopy-common-fo/src/externals/monetization/dfp.js


function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }


/* eslint-disable import/no-cycle */

var exclu = getRandomNumber();
var ads = [];

// provide google googletag async loading api bootstrap
if (typeof window !== 'undefined') {
  window.googletag = window.googletag || {};
  window.googletag.cmd = window.googletag.cmd || [];
  window.googletag.cmd.push(function () {
    // event listener to load backfill ad when a small ad was load and a backfill ad is configured
    // https://developers.google.com/doubleclick-gpt/reference#googletag.events.slotrenderendedevent
    window.googletag.pubads().addEventListener('slotRenderEnded', function (adLoaded) {
      var loadedAd = ads.find(function (ad) {
        return ad.slot === adLoaded.slot;
      });
      if (loadedAd) {
        var backfillAds = ads.filter(function (ad) {
          if (ad.backfill && ad.backfill.forElementId) {
            if (ad.backfill.forElementId === loadedAd.elementId) {
              if (adLoaded.size[0] === ad.backfill.ifSizeIs[0] && adLoaded.size[1] === ad.backfill.ifSizeIs[1]) {
                return true;
              }
            }
          }
          return false;
        });
        /* eslint-disable no-use-before-define */
        backfillAds.forEach(function (ad) {
          var setted = ad.setted,
            path = ad.path,
            size = ad.size,
            elementId = ad.elementId;
          if (setted === false) {
            var slot = window.googletag.defineSlot(path, size, elementId);
            slot.addService(window.googletag.pubads());
            slot = setSlotTargeting(slot, ad, {
              exclu: exclu
            });
            // eslint-disable-next-line no-param-reassign
            ad.setted = true;
            // eslint-disable-next-line no-param-reassign
            ad.slot = slot;
          }
          window.googletag.pubads().refresh([ad.slot]);
        });
      }
    });
  });
}
var conditionsCB = {
  onMobile: function onMobile(_ref) {
    var elementId = _ref.elementId;
    if (window && window.innerWidth <= 768) {
      var element = document.getElementById(elementId);
      if (element && element.parentNode) {
        element.parentNode.className += ' helper_hide-AboveTabletStrict';
      }
      return true;
    }
    return false;
  },
  onDesktop: function onDesktop(_ref2) {
    var elementId = _ref2.elementId;
    if (window && window.innerWidth >= 767) {
      if (window && window.innerWidth > 768) {
        var element = document.getElementById(elementId);
        if (element && element.parentNode) {
          element.parentNode.className += ' helper_hide-BelowTablet';
        }
      }
      return true;
    }
    return false;
  }
};
function setTargeting(slot, data) {
  return Object.keys(data).reduce(function (slotToSet, key) {
    return slotToSet.setTargeting(key, data[key]);
  }, slot);
}
function setSlotTargeting(slot, _ref3, context) {
  var placement = _ref3.placement,
    pos = _ref3.pos;
  return [_objectSpread(_objectSpread({}, context), {}, {
    emplacement: placement,
    pos: pos
  })].reduce(function (googleSlot, data) {
    return data ? setTargeting(googleSlot, data) : slot;
  }, slot);
}
function getCondition(ad) {
  if (ad.conditions && ad.conditions.length > 0) {
    return ad.conditions[0];
  }
  return ad.condition;
}

/**
 * refresh ads by array of ids, if array is not give refresh all ads.
 * @param {Array.<String>}  ids
 */
function refreshAdsIds(ids) {
  if (window.googletag) {
    var clearSlots = [];
    var reloadSlots = [];
    ads.forEach(function (ad) {
      if (ids) {
        ids.forEach(function (reloadId) {
          if (ad.elementId === reloadId) {
            if (!ad.backfill) {
              reloadSlots.push(ad.slot);
            }
          }
        });
      }
      if (ad.backfill) {
        // backfill at need to be cleared befor reloading the ads
        if (ad.slot) {
          // backfill slot get defined only when it is neede the first time, if a reload happens befor it was used we dont clear it
          clearSlots.push(ad.slot);
        }
      }
    });
    window.googletag.cmd.push(function () {
      if (clearSlots.length > 0) {
        window.googletag.pubads().clear(clearSlots);
      }
    });
    window.googletag.cmd.push(function () {
      if (reloadSlots.length > 0) {
        window.googletag.pubads().refresh(reloadSlots);
      } else {
        window.googletag.pubads().refresh();
      }
    });
  }
}

/**
 * refresh pubads with personalized
 * @param rgpdDisableFirstHit
 */
function refreshAds(rgpdDisableFirstHit) {
  if (window.googletag) {
    var isNonPersonalized = Object(monetization["isGoogleTagNonPersonalized"])(rgpdDisableFirstHit);
    window.googletag.cmd.push(function () {
      window.googletag.pubads().setRequestNonPersonalizedAds(isNonPersonalized);
    });
    refreshAdsIds();
  }
}
function setTargetingPubads(keyValueObject, adsTestCampaignON) {
  window.googletag.cmd.push(function () {
    if (typeof adsTestCampaignON === 'boolean' && adsTestCampaignON) {
      window.googletag.pubads().setTargeting('test_campaign', '1');
    }
    Object.entries(keyValueObject).forEach(function (_ref4) {
      var _ref5 = Object(slicedToArray["a" /* default */])(_ref4, 2),
        key = _ref5[0],
        value = _ref5[1];
      window.googletag.pubads().setTargeting(key, "".concat(value));
    });
  });
}

/**
 * construct call async dfp google
 * @param adsArray
 * @param context
 * @returns {Promise<any>}
 */
function setAds(adsArray, context) {
  return new Promise(function (resolve) {
    window.googletag.cmd.push(function () {
      // Iterate over all Ads, but only those for our screen size and user-agent
      adsArray.filter(function (ad) {
        var condition = getCondition(ad);
        return condition === 'onMobile' && context.mobile || condition === 'onDesktop' && !context.mobile;
      }).forEach(function (advertising) {
        var elementId = advertising.elementId,
          size = advertising.size,
          path = advertising.path,
          sizeMap = advertising.sizeMap,
          backfill = advertising.backfill;
        var condition = getCondition(advertising);
        var cb = condition ? conditionsCB[condition] : null;
        if (typeof cb === 'function' && cb(advertising) === true && !backfill) {
          // Create slot
          var slot = size ? window.googletag.defineSlot(path, size, elementId) : window.googletag.defineOutOfPageSlot(path, elementId);
          if (slot) {
            if (sizeMap) {
              var sizeMapping = window.googletag.sizeMapping();
              sizeMap.forEach(function (sizeM) {
                sizeMapping.addSize(sizeM[0], sizeM[1]);
              });
              var buildSizeMap = sizeMapping.build();
              slot.defineSizeMapping(buildSizeMap);
            }
            slot.addService(window.googletag.pubads());
            // Set the target information
            slot = setSlotTargeting(slot, advertising, _objectSpread(_objectSpread({}, context), {}, {
              exclu: exclu
            }));
            // Save the slot
            ads.push(_objectSpread(_objectSpread({
              slot: slot
            }, advertising), {}, {
              setted: true
            }));
          }
        } else {
          if (!backfill) {
            var el = document.getElementById(elementId);
            if (el) {
              el.parentNode.removeChild(el);
            }
          }
          ads.push(_objectSpread(_objectSpread({}, advertising), {}, {
            setted: false
          }));
        }
      });
      window.googletag.pubads().enableSingleRequest();
      window.googletag.enableServices();
      resolve();
    });
  });
}
function nonAsyncSetAds(adsArray, context) {
  return new Promise(function (resolve) {
    // Iterate over all Ads, but only those for our screen size and user-agent
    adsArray.filter(function (ad) {
      var condition = getCondition(ad);
      return condition === 'onMobile' && context.mobile || condition === 'onDesktop' && !context.mobile;
    }).forEach(function (advertising) {
      var elementId = advertising.elementId,
        size = advertising.size,
        path = advertising.path,
        sizeMap = advertising.sizeMap,
        backfill = advertising.backfill;
      var condition = getCondition(advertising);
      var cb = condition ? conditionsCB[condition] : null;
      if (typeof cb === 'function' && cb(advertising) === true && !backfill) {
        // Create slot
        var slot = size ? window.googletag.defineSlot(path, size, elementId) : window.googletag.defineOutOfPageSlot(path, elementId);
        if (slot) {
          if (sizeMap) {
            var sizeMapping = window.googletag.sizeMapping();
            sizeMap.forEach(function (sizeM) {
              sizeMapping.addSize(sizeM[0], sizeM[1]);
            });
            var buildSizeMap = sizeMapping.build();
            slot.defineSizeMapping(buildSizeMap);
          }
          slot.addService(window.googletag.pubads());
          // Set the target information
          slot = setSlotTargeting(slot, advertising, _objectSpread(_objectSpread({}, context), {}, {
            exclu: exclu
          }));
          // Save the slot
          ads.push(_objectSpread(_objectSpread({
            slot: slot
          }, advertising), {}, {
            setted: true
          }));
        }
      } else {
        if (!backfill) {
          var el = document.getElementById(elementId);
          if (el) {
            el.parentNode.removeChild(el);
          }
        }
        ads.push(_objectSpread(_objectSpread({}, advertising), {}, {
          setted: false
        }));
      }
    });
    window.googletag.pubads().enableSingleRequest();
    window.googletag.enableServices();
    resolve();
  });
}

/**
 * send call dfp (googletag.display)
 * @param elementId
 * @returns {null|void}
 */
function dfp_display(elementId) {
  var ad = ads.find(function (advertising) {
    return advertising.elementId === elementId;
  });
  if (ad === undefined) {
    return console.warn("Can't display ".concat(elementId, ". Have you registered it ?"));
  }
  if (ad.setted) {
    window.googletag.cmd.push(function () {
      return window.googletag.display(ad.elementId);
    });
    if (ad.criteoZoneId) {
      display(ad);
    }
  }
  return null;
}

/***/ }),

/***/ 26:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _slicedToArray; });

// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
var arrayWithHoles = __webpack_require__(198);

// CONCATENATED MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(120);

// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
var nonIterableRest = __webpack_require__(199);

// CONCATENATED MODULE: ./node_modules/.pnpm/@babel+runtime@7.24.4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return Object(arrayWithHoles["a" /* default */])(arr) || _iterableToArrayLimit(arr, i) || Object(unsupportedIterableToArray["a" /* default */])(arr, i) || Object(nonIterableRest["a" /* default */])();
}

/***/ }),

/***/ 326:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return urlIsoCharFix; });
var urlIsoCharFix = function urlIsoCharFix(url) {
  var fixedUrl = url;
  fixedUrl = fixedUrl.replace(/%E2%82%AC/g, '€');
  fixedUrl = fixedUrl.replace(/%E2%80%93/g, '–');
  fixedUrl = fixedUrl.replace(/%E2%80%8E/g, ''); //  Word newline char will be removed
  fixedUrl = fixedUrl.replace(/%EF%BF%BD/g, '%C3%A9');
  fixedUrl = fixedUrl.replace(/%A0/g, 0x00A0);
  // fixedUrl = fixedUrl.replace(/%20/g, '%C2%A0');
  fixedUrl = fixedUrl.replace(/%C3%AF%BF%BD/g, '%C3%A9');
  fixedUrl = fixedUrl.replace(/%C([0-9A-F])(?!%[8BA])/g, '%C3%8$1');
  fixedUrl = fixedUrl.replace(/%F([0-9A-F])/g, '%C3%B$1');
  fixedUrl = fixedUrl.replace(/%E([0-9A-F])/g, '%C3%A$1');
  return fixedUrl;
};

/***/ }),

/***/ 39:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _typeof; });
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

/***/ }),

/***/ 457:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "display", function() { return display; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialize", function() { return initialize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "featureFlipping", function() { return featureFlipping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isGoogleTagNonPersonalized", function() { return isGoogleTagNonPersonalized; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAds", function() { return setAds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTargetingPubads", function() { return setTargetingPubads; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createScript", function() { return createScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refreshAds", function() { return refreshAds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refreshAdsIds", function() { return refreshAdsIds; });
/* harmony import */ var _dfp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(231);
/* harmony import */ var _shared_urlIsoCharFix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(326);
/* eslint-disable import/no-cycle */


var ready = false;
var QueuedAdsToDisplay = [];
function getRgpdCookie() {
  var name = 'rgpd=';
  var cookieArr = document.cookie.split(';');
  var decode;
  for (var i = 0; i < cookieArr.length; i += 1) {
    var cookie = cookieArr[i];
    while (cookie.charAt(0) === ' ') {
      cookie = cookie.substring(1);
    }
    if (cookie.indexOf('rgpd') === 0) {
      var cookieOutput = cookie.substring(name.length, cookie.length);
      try {
        decode = decodeURIComponent(cookieOutput);
      } catch (e) {
        try {
          var decodeIso = Object(_shared_urlIsoCharFix__WEBPACK_IMPORTED_MODULE_1__[/* urlIsoCharFix */ "a"])(cookieOutput);
          decode = decodeURIComponent(decodeIso);
        } catch (err) {
          decode = undefined;
        }
      }
    }
  }
  return decode;
}
function displayQueuedAds() {
  QueuedAdsToDisplay.forEach(_dfp__WEBPACK_IMPORTED_MODULE_0__[/* display */ "a"]);
}
function display(elementId) {
  if (ready === false) {
    QueuedAdsToDisplay.push(elementId);
    return;
  }
  _dfp__WEBPACK_IMPORTED_MODULE_0__[/* display */ "a"](elementId);
}

/**
 * initialize reliase on that the dfp js and criteo js got loaded in the head
 * see templates/dMonetizationHeaderLoadScript.def
 * @param dfp
 * @param context
 * @returns {Promise<any>}
 */
function initialize(_ref, context) {
  var dfp = _ref.dfp;
  return _dfp__WEBPACK_IMPORTED_MODULE_0__[/* setAds */ "d"](dfp.ads, context).then(function () {
    return ready = true;
  }).then(displayQueuedAds);
}

/**
 * featureFlipping active uniquement quand rgpdIsActive is active à supprimer
 * @param {boolean} rgpdIsActive
 * @returns {boolean}
 */
function featureFlipping(rgpdIsActive) {
  return rgpdIsActive;
}

/**
 * Used to compute DFP tag (parameter npa=1 if case is non personalized)
 * @param disableFirstHit
 * @returns 1 if the advert should be non personalized, else 0
 */
function isGoogleTagNonPersonalized(disableFirstHit) {
  var isNonPersonalized = 1;
  var rgpdCookie = getRgpdCookie() ? JSON.parse(getRgpdCookie()) : null;
  var isCookieLoadAds = rgpdCookie != null && rgpdCookie.loadAds != null;
  if (disableFirstHit && isCookieLoadAds && rgpdCookie.loadAds) {
    isNonPersonalized = 0;
  }
  if (!disableFirstHit && (!isCookieLoadAds || rgpdCookie.loadAds)) {
    isNonPersonalized = 0;
  }
  return isNonPersonalized;
}
function setAds(monetizationAdsContext, monetizationAdsDataContext, ads) {
  initialize(monetizationAdsContext, monetizationAdsDataContext).then(function () {
    var objProperties = Object.keys(ads);
    objProperties.forEach(function (element) {
      display(ads[element].id);
    });
  });
}
function setTargetingPubads(keyValueObject, adsTestCampaignON) {
  _dfp__WEBPACK_IMPORTED_MODULE_0__[/* setTargetingPubads */ "e"](keyValueObject, adsTestCampaignON);
}
function createScript(scriptsArray) {
  for (var i = 0; i < scriptsArray.length; i += 1) {
    var tagScript = document.createElement('script');
    tagScript.src = scriptsArray[i];
    document.body.appendChild(tagScript);
  }
}

/**
 * refresh pubads with personalized
 * @param rgpdDisableFirstHit
 */
function refreshAds(rgpdDisableFirstHit) {
  _dfp__WEBPACK_IMPORTED_MODULE_0__[/* refreshAds */ "b"](rgpdDisableFirstHit);
}
function refreshAdsIds(ids) {
  _dfp__WEBPACK_IMPORTED_MODULE_0__[/* refreshAdsIds */ "c"](ids);
}

/***/ }),

/***/ 7:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _defineProperty; });
/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(165);

function _defineProperty(obj, key, value) {
  key = Object(_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/***/ }),

/***/ 83:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _arrayLikeToArray; });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}

/***/ })

},[[457,1]]]);